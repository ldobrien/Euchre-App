{"version":3,"sources":["Euchre.jpg","components/Home.js","store/actions/playerActions.js","components/AddPlayer.js","components/Players.js","components/Game.js","store/actions/gameActions.js","components/AddGame.js","components/Games.js","components/SignedOutLinks.js","components/SignedInLinks.js","store/actions/authActions.js","components/Navbar.js","components/PlayerStats.js","components/Player.js","components/AddAccount.js","components/Signin.js","components/EditGame.js","components/RankSettings.js","components/DeletePlayers.js","components/DeleteDatabase.js","components/EditGamesDatabase.js","components/Settings.js","App.js","serviceWorker.js","store/reducers/playerReducer.js","store/reducers/gameReducer.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","className","src","Euchre","alt","addPlayerWeight","playerName","weight","dispatch","getState","_ref2","getFirebase","getFirestore","collection","doc","update","then","type","catch","err","AddPlayer","state","Name","Skill","error","success","handleSubmit","e","preventDefault","_this","setState","props","players","createPlayer","handleChange","Object","defineProperty","target","name","value","this","auth","uid","onSubmit","onChange","placeholder","Redirect","to","Component","compose","connect","firebase","firestore","data","player","_ref","set","firestoreConnect","Players","weightList","mounted","addWeights","_callee","_this$props","games","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","win","loss","totalPoints","winsize","losssize","totalGames","winLoss","average","regenerator_default","wrap","_context","prev","next","abrupt","undefined","Symbol","iterator","done","filter","game","winner1","winner2","loser1","loser2","forEach","score","Number","length","t0","return","finish","stop","addRanks","_callee2","_this$props2","playerRanks","sorted","ranks","index","_context2","slice","sort","b","map","v","indexOf","addPlayerRank","_this$props3","playerList","values","rank","key","id","Link","components_AddPlayer","ordered","_ref3","Game","date","toString","createGame","add","AddGame","Date","suggestions","keys","regex","RegExp","concat","x","test","objectSpread","l1","l2","w1","w2","isInteger","Set","size","document","getElementById","reset","window","alert","resetState","_this2","_this3","item","onClick","suggestionSelected","autoComplete","input","renderSuggestions","Games","addGame","lst","listofGames","push","gameList","components_Game","components_AddGame","orderBy","SignedOutLinks","NavLink","signOut","links","components_SignedInLinks","components_SignedOutLinks","PlayerStats","plus","skunks","timesskunked","playerGames","wins","losses","plusMinus","Math","round","Player","allGames","playersGames","random","match","params","components_PlayerStats","saveWeight","ownProps","player_id","AddAccount","newUser","username","password","submitted","addAccount","authError","htmlFor","user","console","log","createUserWithEmailAndPassword","Signin","_Component","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","signIn","inherits","createClass","creds","credentials","signInWithEmailAndPassword","EditGame","editGame","game_id","RankSettings","gamesPlayed","val","DeletePlayer","deletePlayer","_ref4","delete","DeleteDatabase","deleteGame","EditGamesDatabase","components_DeleteDatabase","Settings","authorized","email","DeletePlayers","App","BrowserRouter","components_Navbar","Switch","Route","exact","path","component","Boolean","location","hostname","initState","playerReducer","action","toConsumableArray","gameReducer","assign","completed","accountAdded","authReducer","message","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iQCazBC,EAVF,WACT,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,QACAH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAQC,IAAI,WACtBN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,uHCOCI,EAAkB,SAACC,EAAYC,GACxC,OAAO,SAACC,EAAUC,EAAXC,GAAsDA,EAAhCC,aAEPC,EAFuCF,EAAnBE,gBAG5BC,WAAW,WAAWC,IAAIR,GAAYS,OAAO,CACnDR,OAAQA,IAEXS,KAAK,WACFR,EAAS,CAACS,KAAM,aAAcV,aAEjCW,MAAM,SAACC,GACJX,EAAS,CAACS,KAAM,mBAAoBE,qBCnB1CC,6MACFC,MAAQ,CACJC,KAAM,KACNC,MAAM,IACNhB,OAAQ,EACRiB,MAAO,KACPC,QAAS,QAGbC,aAAe,SAACC,GACZA,EAAEC,iBACoB,MAAnBC,EAAKR,MAAMC,KACVO,EAAKC,SAAS,CACVN,MAAO,oBACPC,QAAS,OAGa,MAAtBI,EAAKE,MAAMC,SAAmBH,EAAKE,MAAMC,QAAQH,EAAKR,MAAMC,MAChEO,EAAKC,SAAS,CACVN,MAAO,6CACPC,QAAS,QAGbI,EAAKE,MAAME,aAAaJ,EAAKR,OAC7BQ,EAAKC,SAAS,CACVN,MAAO,KACPC,QAAS,4BACTH,KAAM,KACNC,MAAO,IACPhB,OAAQ,QAKpB2B,aAAe,SAACP,GACZE,EAAKC,SAALK,OAAAC,EAAA,EAAAD,CAAA,GACKR,EAAEU,OAAOC,KAAOX,EAAEU,OAAOE,iFAM9B,OADiBC,KAAKT,MAAdU,KACCC,IAKL5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,cACIH,EAAAC,EAAAC,cAAA,QAAM2C,SAAUH,KAAKd,cACjB5B,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SAAOiB,KAAK,OAAO2B,SAAUJ,KAAKN,aAAcI,KAAK,OAAOO,YAAY,SACxE/C,EAAAC,EAAAC,cAAA,UAAQiB,KAAK,UAAb,UAEJnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVuC,KAAKnB,MAAMG,MAAQ1B,EAAAC,EAAAC,cAAA,SAAIwC,KAAKnB,MAAMG,OAAa,MAEpD1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACVuC,KAAKnB,MAAMI,QAAU3B,EAAAC,EAAAC,cAAA,SAAIwC,KAAKnB,MAAMI,SAAe,OAhBrD3B,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAUC,GAAG,mBA3CRC,aA+ETC,cACXC,YAdoB,SAAC7B,GACrB,MAAO,CACHoB,KAAMpB,EAAM8B,SAASV,KACrBT,QAASX,EAAM+B,UAAUC,KAAKrB,UAIX,SAACxB,GACxB,MAAO,CACHyB,aAAc,SAACqB,GAAD,OAAY9C,EDlFN,SAAC8C,GACzB,OAAO,SAAC9C,EAAUC,EAAX8C,GAAsDA,EAAhC5C,aAEPC,EAFuC2C,EAAnB3C,gBAI5BC,WAAW,WAAWC,IAAIwC,EAAOhC,MAAMkC,IAAIF,GACpDtC,KAAK,WACFR,EAAS,CAACS,KAAM,gBAAiBqC,aAEpCpC,MAAM,SAACC,GACJX,EAAS,CAACS,KAAM,sBAAuBE,WCwERc,CAAaqB,QAMpDG,2BAAiB,CACb,CAAE5C,WAAY,aAHPoC,CAIP7B,GCjFFsC,6MACFrC,MAAQ,CACJsC,WAAY,GACZC,SAAS,KAUbC,gCAAa,SAAAC,IAAA,IAAAC,EAAA/B,EAAAgC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzE,EAAA0E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtE,EAAA,OAAAuE,EAAA/E,EAAAgF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAnB,EACwBlC,EAAKE,MAA9BC,EADC+B,EACD/B,QADC+B,EACQtB,KAAMuB,EADdD,EACcC,MACnBhC,EAFK,CAAAgD,EAAAE,KAAA,eAAAF,EAAAG,OAAA,SAGErF,EAAAC,EAAAC,cAAA,WAHF,OAKT,IALSiE,GAAA,EAAAC,GAAA,EAAAC,OAAAiB,EAAAJ,EAAAC,KAAA,EAKTb,EAAapC,EAAbqD,OAAAC,cAAArB,GAAAI,EAAAD,EAAAc,QAAAK,MAAAtB,GAAA,EAAQrE,EAAayE,EAAA9B,MACb+B,EAAe,MAATN,EAAgB,KACtBA,EAAMwB,OAAO,SAAAC,GACb,OAAQA,EAAKC,SAAW9F,EAAE0B,MAAQmE,EAAKE,SAAW/F,EAAE0B,OAEpDiD,EAAgB,MAATP,EAAgB,KACvBA,EAAMwB,OAAO,SAAAC,GACb,OAAQA,EAAKG,QAAUhG,EAAE0B,MAAQmE,EAAKI,QAAUjG,EAAE0B,OAG3C,EACPkD,EAAc,EAEA,MAAPF,EAAc,EAAIA,EAAIwB,QAAQ,SAASL,GACtC,GAAKA,EAAKM,MAClBvB,GAAe,KAEJ,MAARD,EAAe,EAAIA,EAAKuB,QAAQ,SAASL,GACpCA,EAAKM,MAAQ,GACrBvB,GAAewB,OAAOP,EAAKM,SAE3BtB,EAAkB,OAARH,EAAe,EAAIA,EAAI2B,OACjCvB,EAAmB,MAARH,EAAe,EAAIA,EAAK0B,OAGnCrB,EAAwB,IADxBD,EAAaF,EAAUC,GACe,IAAVD,EAAgBE,EAAa,EACzDE,EAAwB,GAAdF,EAAkBH,EAAcG,EAAa,EACrDpE,EAASoE,EAAa,GAAe,KAAVC,EAA2B,IAAVC,EAAgB,EAC3DhD,EAAKE,MAAQF,EAAKE,MAAM1B,gBAAgBT,EAAE0B,KAAMf,GAAU,KAjC5DyE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAkB,GAAAlB,EAAA,SAAAd,GAAA,EAAAC,EAAAa,EAAAkB,GAAA,QAAAlB,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAAhB,GAAA,MAAAG,EAAA+B,QAAA/B,EAAA+B,SAAA,WAAAnB,EAAAC,KAAA,IAAAf,EAAA,CAAAc,EAAAE,KAAA,eAAAf,EAAA,eAAAa,EAAAoB,OAAA,mBAAApB,EAAAoB,OAAA,6BAAApB,EAAAqB,SAAAvC,EAAAtB,KAAA,iCAqCb8D,8BAAW,SAAAC,IAAA,IAAAC,EAAAxE,EAAAyE,EAAAC,EAAAC,EAAAC,EAAA,OAAA9B,EAAA/E,EAAAgF,KAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,UAAAsB,EAC0B3E,EAAKE,MAA9BC,EADDwE,EACCxE,QADDwE,EACU/D,KADV+D,EACgBxC,MACnBhC,EAFG,CAAA6E,EAAA3B,KAAA,eAAA2B,EAAA1B,OAAA,SAGIrF,EAAAC,EAAAC,cAAA,WAHJ,OAMP,GADIyG,EAAczE,EAAQwD,OAAO,SAAA5F,GAAC,OAAgB,GAAZA,EAAEW,SACrCsB,EAAKR,MAAMuC,SAAiC,GAAtB6C,EAAYR,OAAY,CAG7C,IAAQW,KAFJF,EAASD,EAAYK,QAAQC,KAAK,SAAChH,EAAEiH,GAAH,OAAUjH,EAAEQ,OAASyG,EAAEzG,OAAU,EAAMyG,EAAEzG,OAASR,EAAEQ,QAAW,EAAI,IACrGoG,EAAQF,EAAYK,QAAQG,IAAI,SAASC,GAAI,OAAOR,EAAOS,QAAQD,GAAG,IACzDR,EACF7E,EAAKE,MAAQF,EAAKE,MAAMqF,cAAcX,EAAYG,GAAOtF,KAAMqF,EAAMC,IAAU,KAE9F/E,EAAKC,SAAS,CACV8B,SAAS,IAbV,wBAAAiD,EAAAR,SAAAE,EAAA/D,4FA5CPA,KAAKV,SAAS,CACV8B,SAAS,iDAIbpB,KAAKqB,8CA0DLrB,KAAK8D,WADD,IAAAe,EAE6B7E,KAAKT,MAA9BC,EAFJqF,EAEIrF,QAASS,EAFb4E,EAEa5E,KAFb4E,EAEmBrD,MACvB,IAAIhC,EACA,OAAOlC,EAAAC,EAAAC,cAAA,UAGX,IAAMsH,EAAanF,OAAOoF,OAAOvF,GAASiF,IAAI,SAAA3D,GAC1C,IAAMkE,EAAyB,IAAlBlE,EAAO/C,OAAe,KAAOT,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,SAAiCqD,EAAOkE,MAClF,OACI1H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBwH,IAAKnE,EAAOoE,IACxC5H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAM5E,GAAK,YAAcO,EAAOoE,IAC5B5H,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAyBqD,EAAOhC,MAC5CkG,OAMjB,OACI1H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdwC,EAAKC,IAAM5C,EAAAC,EAAAC,cAAC4H,EAAD,MAAc,KACtB9H,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAC1BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACCqH,YA9FCtE,aAmHPC,cACXC,YAdoB,SAAC7B,GACrB,MAAO,CACHW,QAASX,EAAM+B,UAAUyE,QAAQ7F,QACjCS,KAAMpB,EAAM8B,SAASV,KACrBuB,MAAO3C,EAAM+B,UAAUyE,QAAQ7D,QAGZ,SAACxD,GACxB,MAAO,CACHH,gBAAiB,SAACC,EAAYC,GAAb,OAAwBC,EAASH,EAAgBC,EAAYC,KAC9E6G,cAAe,SAAC9G,EAAYC,GAAb,OAAwBC,EF1FlB,SAACF,EAAYkH,GACtC,OAAO,SAAChH,EAAUC,EAAXqH,GAAsDA,EAAhCnH,aAEPC,EAFuCkH,EAAnBlH,gBAG5BC,WAAW,WAAWC,IAAIR,GAAYS,OAAO,CACnDyG,KAAMA,IAETxG,KAAK,WACFR,EAAS,CAACS,KAAM,WAAYuG,WAE/BtG,MAAM,SAACC,GACJX,EAAS,CAACS,KAAM,iBAAkBE,WE+EUiG,CAAc9G,EAAYC,QAK9EkD,2BAAiB,CACb,CAAE5C,WAAY,WACd,CAAEA,WAAY,WAJPoC,CAMbS,GC1GaqE,mLApBb,IAAIC,EAA0B,MAAnBxF,KAAKT,MAAMiG,KAAe,KAAOxF,KAAKT,MAAMiG,KAAKC,WACtD,OACInI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACvBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAAqBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,aACjCuC,KAAKT,MAAM2D,QAAU,KAAOlD,KAAKT,MAAM4D,SACxC7F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAoBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,YAChCuC,KAAKT,MAAM6D,OAAS,KAAOpD,KAAKT,MAAM8D,SAExC/F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAmBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,mBAAoDuC,KAAKT,MAAMgE,OAC/FjG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAmBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,UAC/B+H,aAfYhF,qBCFNkF,EAAa,SAACzC,GACvB,OAAO,SAACjF,EAAUC,EAAX8C,GAAqDA,EAA/B5C,aAEPC,EAFsC2C,EAAlB3C,gBAI5BC,WAAW,SAASsH,IAAI1C,GACjCzE,KAAK,WACFR,EAAS,CAACS,KAAM,cAAewE,WAElCvE,MAAM,SAACC,GACJX,EAAS,CAACS,KAAM,oBAAqBE,YCH3CiH,oNACF/G,MAAQ,CACJoE,KAAM,CACFC,QAAS,GACTC,QAAS,GACTC,OAAQ,GACRC,OAAQ,GACRE,OAAQ,EACRiC,MAAM,IAAIK,MAAOJ,YAErBK,YAAa,CACT5C,QAAS,GACTC,QAAS,GACTC,OAAQ,GACRC,OAAQ,OAIhB3D,aAAe,SAACP,GACZ,GAAQ,MAALA,EAAU,CAET,IAAMW,EAAOX,EAAEU,OAAOC,KAChBC,EAAQZ,EAAEU,OAAOE,MACjBP,EAAUG,OAAOoG,KAAK1G,EAAKE,MAAMC,SACnCsG,EAAc,GAClB,GAAG/F,EAAM0D,OAAS,GAAgB,MAAXjE,EAAgB,CACnC,IAAMwG,EAAQ,IAAIC,OAAJ,IAAAC,OAAenG,GAAS,KACtC+F,EAActG,EAAQ+E,OAAOvB,OAAO,SAAAmD,GAAC,OAAIH,EAAMI,KAAKD,KAExD9G,EAAKC,SAAS,iBAAO,CACjB2D,KAAKtD,OAAA0G,EAAA,EAAA1G,CAAA,GACEN,EAAKR,MAAMoE,KADdtD,OAAAC,EAAA,EAAAD,CAAA,GAECG,EAAOC,IAEZ+F,YAAYnG,OAAAC,EAAA,EAAAD,CAAA,GACPG,EAAOgG,UA8BxB5G,aAAe,SAACC,GACZA,EAAEC,iBACF,IAAImE,EAAQC,OAAOnE,EAAKR,MAAMoE,KAAKM,OAC/B+C,EAAKjH,EAAKR,MAAMoE,KAAKG,OACrBmD,EAAKlH,EAAKR,MAAMoE,KAAKI,OACrBmD,EAAKnH,EAAKR,MAAMoE,KAAKC,QACrBuD,EAAKpH,EAAKR,MAAMoE,KAAKE,QAEpBI,EAAQ,IAAMA,GAAQ,GAAiD,GAA3ClE,EAAKR,MAAMoE,KAAKM,MAAMkC,WAAWhC,OAMxDD,OAAOkD,UAAUnD,GAMnBlE,EAAKE,MAAMC,QAAQgH,IACvBnH,EAAKE,MAAMC,QAAQ8G,IACnBjH,EAAKE,MAAMC,QAAQiH,IACnBpH,EAAKE,MAAMC,QAAQ+G,GAEmB,IAAnC,IAAII,IAAI,CAACH,EAAIC,EAAIH,EAAIC,IAAKK,MACzBvH,EAAKE,MAAMmG,WAAWrG,EAAKR,MAAMoE,MACjC4D,SAASC,eAAe,QAAQC,QAChC1H,EAAKC,SAAS,CACVL,QAAS,aACTD,MAAO,KACPiE,KAAM,CACFC,QAAS,GACTC,QAAS,GACTC,OAAQ,GACRC,OAAQ,GACRE,OAAQ,EACRiC,MAAM,IAAIK,MAAOJ,cAGzBuB,OAAOC,MAAM,eAGb5H,EAAKC,SAAS,CACVL,QAAS,KACTD,MAAO,yDAIfK,EAAKC,SAAS,CACVL,QAAS,KACTD,MAAO,6CApCXK,EAAKC,SAAS,CACVL,QAAS,KACTD,MAAO,4BARXK,EAAKC,SAAS,CACVL,QAAS,KACTD,MAAO,wBA8CnBkI,WAAa,SAAC/H,GACVE,EAAKC,SAAS,CACV2D,KAAM,CACFC,QAAS,GACTC,QAAS,GACTC,OAAQ,GACRC,OAAQ,GACRE,OAAQ,EACRiC,MAAM,IAAIK,MAAOJ,YAErBK,YAAa,GACb7G,QAAS,KACTD,MAAO,0FA7FIc,EAAMC,GAAM,IAAAoH,EAAAnH,KAC3BA,KAAKV,SAAS,iBAAK,CACfwG,YAAYnG,OAAAC,EAAA,EAAAD,CAAA,GACPG,EAAO,IAEZmD,KAAKtD,OAAA0G,EAAA,EAAA1G,CAAA,GACEwH,EAAKtI,MAAMoE,KADdtD,OAAAC,EAAA,EAAAD,CAAA,GAECG,EAAOC,iDAKFD,GAAM,IAAAsH,EAAApH,KACd8F,EAAc9F,KAAKnB,MAAMiH,YAAYhG,GAC3C,OAAkB,MAAfgG,GAA8C,IAAvBA,EAAYrC,OAC3B,KAGPnG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBACTqI,EAAYrB,IAAI,SAAC4C,GAAD,OAAU/J,EAAAC,EAAAC,cAAA,MAAIyH,IAAKoC,EAAMC,QAAS,kBAAMF,EAAKG,mBAAmBzH,EAAMuH,KAAQA,uCA+EvG,IAAM7H,EAAgC,MAAtBQ,KAAKT,MAAMC,QAAkB,KAAOG,OAAOoG,KAAK/F,KAAKT,MAAMC,SACvER,EAA4B,MAApBgB,KAAKnB,MAAMG,MAAgB,KAAO1B,EAAAC,EAAAC,cAAA,SAAIwC,KAAKnB,MAAMG,OACzDC,EAAgC,MAAtBe,KAAKnB,MAAMI,QAAkB,KAAO3B,EAAAC,EAAAC,cAAA,SAAIwC,KAAKnB,MAAMI,SACjE,GAAY,MAATD,GAA4B,MAAXC,EACRe,KAAKkH,WAEjB,OACI5J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAM0H,GAAG,OAAO/E,SAAWH,KAAKd,cAChC5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVuB,GAEL1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACVwB,GAED3B,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SACIiB,KAAK,OACL+I,aAAa,MACbC,MAAOjI,EACPM,KAAK,UACLO,YAAY,SACZD,SAAWJ,KAAKN,aAChBK,MAAOC,KAAKnB,MAAMoE,KAAKC,UACtBlD,KAAK0H,kBAAkB,WAC5BpK,EAAAC,EAAAC,cAAA,SACIiB,KAAK,OACL+I,aAAa,MACbC,MAAOjI,EACPM,KAAK,UACLO,YAAY,SACZD,SAAWJ,KAAKN,aAChBK,MAAOC,KAAKnB,MAAMoE,KAAKE,UACtBnD,KAAK0H,kBAAkB,WAC5BpK,EAAAC,EAAAC,cAAA,SACIiB,KAAK,OACL+I,aAAa,MACbC,MAAOjI,EACPM,KAAK,SACLO,YAAY,QACZD,SAAWJ,KAAKN,aAChBK,MAAOC,KAAKnB,MAAMoE,KAAKG,SACtBpD,KAAK0H,kBAAkB,UAC5BpK,EAAAC,EAAAC,cAAA,SACIiB,KAAK,OACL+I,aAAa,MACbC,MAAOjI,EACPM,KAAK,SACLO,YAAY,QACZD,SAAWJ,KAAKN,aAChBK,MAAOC,KAAKnB,MAAMoE,KAAKI,SACtBrD,KAAK0H,kBAAkB,UAC5BpK,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOiB,KAAK,OAAOqB,KAAK,QAAQ0H,aAAa,MAAMnH,YAAY,gBAAgBD,SAAWJ,KAAKN,eAC/FpC,EAAAC,EAAAC,cAAA,UAAQiB,KAAK,UAAb,kBAjME+B,cAmNPC,cACXC,YAZoB,SAAC7B,GACrB,MAAM,CACFW,QAASX,EAAM+B,UAAUC,KAAKrB,UAGX,SAACxB,GACxB,MAAO,CACH0H,WAAY,SAACzC,GAAD,OAAUjF,EAAS0H,EAAWzC,QAM9ChC,2BAAiB,CACb,CAAE5C,WAAY,aAHPoC,CAKbmF,GCvNI+B,6MACFC,QAAU,SAAC3E,GACP,IAAI4E,EAAMxI,EAAKR,MAAMiJ,YACrBD,EAAIE,KAAK9E,GACT5D,EAAKC,SAAS,CACVwI,YAAaD,6EAGb,IACI5H,EAASD,KAAKT,MAAdU,KACR,IAAID,KAAKT,MAAMiC,MACX,OAAOlE,EAAAC,EAAAC,cAAA,UAEX,IAAMwK,EAAWhI,KAAKT,MAAMiC,MAAMiD,IAAI,SAAAxB,GAClC,OACI3F,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAM5E,GAAK,UAAY0C,EAAKiC,GAAID,IAAKhC,EAAKiC,IACtC5H,EAAAC,EAAAC,cAACyK,EAAD,CAAM/E,QAASD,EAAKC,QAASC,QAASF,EAAKE,QACvCC,OAAQH,EAAKG,OAAQC,OAAQJ,EAAKI,OAClCE,MAAON,EAAKM,MAAOiC,KAAMvC,EAAKuC,KAAMP,IAAKhC,EAAKiC,QAI9D,OACI5H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,SACCwC,EAAKC,IAAM5C,EAAAC,EAAAC,cAAC0K,EAAD,CAASN,QAAS5H,KAAK4H,UAAY,KAC9CI,UA1BGxH,aAuCLC,cACXC,YARoB,SAAC7B,GACrB,MAAM,CACFoB,KAAMpB,EAAM8B,SAASV,KACrBuB,MAAO3C,EAAM+B,UAAUyE,QAAQ7D,SAMnCP,2BAAiB,CAAC,CACd5C,WAAY,QACZ8J,QAAS,CAAC,OAAQ,WAJX1H,CAMbkH,YCxCaS,EAVQ,WACrB,OACE9K,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAS9H,GAAG,WAAZ,eCgBGG,cAAQ,KANI,SAAC1C,GACxB,MAAO,CACHsK,QAAS,kBAAMtK,ECHZ,SAACA,EAAUC,EAAXC,IACcC,EADyBD,EAAjBC,eAEhB8B,OAAOqI,UACf9J,KAAK,WACFR,EAAS,CAACS,KAAM,2BDGbiC,CAlBO,SAACnB,GACrB,OACEjC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAS9H,GAAG,gBAAZ,gBACJjD,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAS9H,GAAG,aAAZ,aACJjD,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG8J,QAAS/H,EAAM+I,SAAlB,iBEmBG5H,cANS,SAAC7B,GAErB,MAAO,CACHoB,KAAMpB,EAAM8B,SAASV,OAGdS,CAxBA,SAACnB,GAAU,IAEhBgJ,EADWhJ,EAATU,KACWC,IAAM5C,EAAAC,EAAAC,cAACgL,EAAD,MAAoBlL,EAAAC,EAAAC,cAACiL,EAAD,MAC7C,OACInL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAb,aACE8K,EACFjL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAM5E,GAAG,KAAT,SACJjD,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAS9H,GAAG,YAAZ,YACJjD,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAS9H,GAAG,UAAZ,eCuCTmI,mLAlDP,IAAIC,EAAO,EACP3G,EAAc,EACd4G,EAAS,EACTC,EAAe,EAJftH,EAK8BvB,KAAKT,MAAhCuJ,EALHvH,EAKGuH,YAAahL,EALhByD,EAKgBzD,WACdgE,EAAqB,MAAfgH,EAAsB,KAAOA,EAAY9F,OAAO,SAAAC,GACxD,OAAOA,EAAKC,UAAYpF,GAAcmF,EAAKE,UAAYrF,IAErDiE,EAAsB,MAAf+G,EAAsB,KAAOA,EAAY9F,OAAO,SAAAC,GACzD,OAAOA,EAAKG,SAAWtF,GAAcmF,EAAKI,SAAWvF,IAGvC,MAAPgE,GAAkBA,EAAIwB,QAAQ,SAASL,GAC9C0F,GAAQ,GAAK1F,EAAKM,MAClBvB,GAAe,GACf4G,GAAiC,IAAvBpF,OAAOP,EAAKM,OAAe,EAAI,IAE9B,MAARxB,GAAmBA,EAAKuB,QAAQ,SAASL,GAC5C0F,GAAQ1F,EAAKM,MAAQ,GACrBvB,GAAewB,OAAOP,EAAKM,OAC3BsF,GAAuC,IAAvBrF,OAAOP,EAAKM,OAAe,EAAI,IAGnD,IAAIwF,EAAc,MAAPjH,EAAc,EAAIA,EAAI2B,OAC7BuF,EAAiB,MAARjH,EAAe,EAAIA,EAAK0B,OACjCtB,EAAqB,MAAR4G,GAA0B,MAAVC,EAAiBD,EAAOC,EAAS,EAC9D5G,EAAwB,GAAdD,EAAyB,IAAP4G,EAAa5G,EAAa,EACpD8G,EAAYN,EAAO,EAAIrL,EAAAC,EAAAC,cAAA,gBAAQmL,GAAerL,EAAAC,EAAAC,cAAA,YAAOmL,GACvDtG,EAAwB,GAAdF,EAAkBH,EAAcG,EAAa,EACrDpE,EAASoE,EAAa,GAAe,KAAVC,EAA2B,IAAVC,EAAgB,EAElE,OACI/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACfH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mBAAWuL,GACXzL,EAAAC,EAAAC,cAAA,qBAAawL,GACb1L,EAAAC,EAAAC,cAAA,0BAAkB2E,GAClB7E,EAAAC,EAAAC,cAAA,kCAA0B0L,KAAKC,MAAgB,IAAV/G,GAAiB,IAAtD,KACA9E,EAAAC,EAAAC,cAAA,wBAAgByL,GAChB3L,EAAAC,EAAAC,cAAA,iCAAyB0L,KAAKC,MAAgB,IAAV9G,GAAiB,KACrD/E,EAAAC,EAAAC,cAAA,qBAAaO,GACbT,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,qBAAaoL,GACbtL,EAAAC,EAAAC,cAAA,4BAAoBqL,WA9CVrI,aCKpB4I,qLACS7J,EAAOxB,GACJiC,KAAKT,OAAQS,KAAKT,MAAM1B,gBAAgBmC,KAAKT,MAAMuB,OAAOhC,KAAMf,oCAGtE,IAAAwD,EACyBvB,KAAKT,MAA1BuB,EADJS,EACIT,OAAQuI,EADZ9H,EACY8H,SACVC,EAA2B,MAAZD,GAA8B,MAAVvI,EAAiBuI,EAASrG,OAAO,SAAUC,GAKhF,OAJQA,EAAKC,UAAYpC,EAAOhC,MAChCmE,EAAKE,UAAYrC,EAAOhC,MACxBmE,EAAKG,SAAWtC,EAAOhC,MACvBmE,EAAKI,SAAWvC,EAAOhC,OAEvB,KACJ,IAAIgC,EACA,OAAOxD,EAAAC,EAAAC,cAAA,UAGX,IAAMwK,EAA2B,MAAhBsB,EAAuB,KAAOA,EAAa7E,IAAI,SAAAxB,GAC5D,OACI3F,EAAAC,EAAAC,cAACyK,EAAD,CAAM/E,QAASD,EAAKC,QAASC,QAASF,EAAKE,QAC3CC,OAAQH,EAAKG,OAAQC,OAAQJ,EAAKI,OAAQE,MAAON,EAAKM,MAAOiC,KAAMvC,EAAKuC,KAAMP,IAAKiE,KAAKK,aAIhG,OACIjM,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYwH,IAAKjF,KAAKT,MAAMiK,MAAMC,OAAOvE,IACpD5H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAb,SAA4CqD,EAAOhC,MACnDxB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAAb,SAA8CqD,EAAOkE,MACrD1H,EAAAC,EAAAC,cAACkM,EAAD,CACIZ,YAAaO,EACbvL,WAAYgD,EAAOhC,KACnB6K,WAAY3J,KAAK2J,WACjBpK,MAAOS,KAAKT,aAMpCjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,SACCuK,WA9CAxH,aAoENC,cACXC,YAjBoB,SAAC7B,EAAO+K,GAC5B,IAAM1E,EAAK0E,EAASJ,MAAMC,OAAOI,UAC3BrK,EAAUX,EAAM+B,UAAUC,KAAKrB,QAIrC,MAAM,CACFsB,OAJWtB,EAAUA,EAAQ0F,GAAM,KAKnCmE,SAJaxK,EAAM+B,UAAUyE,QAAQ7D,QAOlB,SAACxD,GACxB,MAAO,CACHH,gBAAiB,SAACC,EAAYC,GAAb,OAAwBC,EAASH,EAAgBC,EAAYC,QAKlFkD,2BAAiB,CACb,CAAE5C,WAAY,WACd,CAAEA,WAAY,WAJPoC,CAMb2I,GC7EIU,6MACFjL,MAAO,CACHkL,QAAS,CACLC,SAAU,GACVC,SAAU,IAEdC,WAAW,KAGfxK,aAAe,SAACP,GACZE,EAAKC,SAAS,CACVyK,QAAQpK,OAAA0G,EAAA,EAAA1G,CAAA,GACDN,EAAKR,MAAMkL,QADXpK,OAAAC,EAAA,EAAAD,CAAA,GAEFR,EAAEU,OAAOqF,GAAK/F,EAAEU,OAAOE,aAKpCb,aAAe,SAACC,GACZA,EAAEC,iBACFC,EAAKE,MAAM4K,WAAW9K,EAAKR,MAAMkL,SACjC1K,EAAKC,SAAS,CACV4K,WAAW,6EAIX,IAAA3I,EACwBvB,KAAKT,MAAzBU,EADJsB,EACItB,KAAMmK,EADV7I,EACU6I,UACd,OAAInK,EAAKC,IAIL5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAM2C,SAAUH,KAAKd,aAAczB,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO6M,QAAQ,YAAf,YACA/M,EAAAC,EAAAC,cAAA,SAAOiB,KAAK,OAAOyG,GAAG,WAAW9E,SAAUJ,KAAKN,gBAEpDpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO6M,QAAQ,YAAf,YACA/M,EAAAC,EAAAC,cAAA,SAAOiB,KAAK,WAAWyG,GAAG,WAAW9E,SAAUJ,KAAKN,gBAExDpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAlB,aAGRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACduC,KAAKnB,MAAMqL,UACZE,EAAY9M,EAAAC,EAAAC,cAAA,SAAI4M,GAAiB9M,EAAAC,EAAAC,cAAA,4BAAwB,OApBtDF,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAUC,GAAG,mBA7BPC,aAoEVE,cAZS,SAAC7B,GACrB,MAAO,CACHoB,KAAMpB,EAAM8B,SAASV,KACrBmK,UAAWvL,EAAMoB,KAAKmK,YAIH,SAACpM,GACxB,MAAO,CACHmM,WAAY,SAACG,GAAD,OAAUtM,GJ7CH+L,EI6CuBO,EJ5CvC,SAACtM,EAAUC,EAAXqH,GAAqD,IAA/BnH,EAA+BmH,EAA/BnH,YAAaC,EAAkBkH,EAAlBlH,aAChCuC,EAAWxC,IACCC,IAClBmM,QAAQC,IAAIT,GACZpJ,EAASV,OAAOwK,+BACZV,EAAQC,SACRD,EAAQE,UAEXzL,KAAK,WACFR,EAAS,CAAES,KAAM,qBAEpBC,MAAM,SAACC,GACJX,EAAS,CAAES,KAAM,eAAgBE,aAbnB,IAACoL,KIgDZrJ,CAA6CoJ,GCpE/CY,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAvL,EAAAM,OAAAkL,EAAA,EAAAlL,CAAAK,KAAA0K,GAAA,QAAAI,EAAAC,UAAAtH,OAAAuH,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,OAAA7L,EAAAM,OAAAwL,EAAA,EAAAxL,CAAAK,MAAA4K,EAAAjL,OAAAyL,EAAA,EAAAzL,CAAA+K,IAAAW,KAAAC,MAAAV,EAAA,CAAA5K,MAAAkG,OAAA8E,MACInM,MAAQ,CACJmL,SAAU,KACVC,SAAU,MAHlB5K,EAMIH,aAAe,SAACC,GACZA,EAAEC,iBACFC,EAAKE,MAAMgM,OAAOlM,EAAKR,QAR/BQ,EAWIK,aAAe,SAACP,GACZE,EAAKC,SAALK,OAAAC,EAAA,EAAAD,CAAA,GACKR,EAAEU,OAAOqF,GAAK/F,EAAEU,OAAOE,SAbpCV,EAAA,OAAAM,OAAA6L,EAAA,EAAA7L,CAAA+K,EAAAC,GAAAhL,OAAA8L,EAAA,EAAA9L,CAAA+K,EAAA,EAAAzF,IAAA,SAAAlF,MAAA,WAiBa,IAAAwB,EACoBvB,KAAKT,MAAvB6K,EADF7I,EACE6I,UACP,OAFK7I,EACatB,KACVC,IAEA5C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAUC,GAAG,MAIjBjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAM2C,SAAUH,KAAKd,aAAczB,UAAU,SACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO6M,QAAQ,YAAf,YACA/M,EAAAC,EAAAC,cAAA,SAAOiB,KAAK,OAAOyG,GAAG,WAAW9E,SAAUJ,KAAKN,gBAEpDpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO6M,QAAQ,YAAf,YACA/M,EAAAC,EAAAC,cAAA,SAAOiB,KAAK,WAAWyG,GAAG,WAAW9E,SAAUJ,KAAKN,gBAExDpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAlB,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACb2M,EAAY9M,EAAAC,EAAAC,cAAA,SAAI4M,GAAgB,aAvC1DM,EAAA,CAA4BlK,aA0DbE,cAXS,SAAC7B,GACrB,MAAO,CACHuL,UAAWvL,EAAMoB,KAAKmK,UACtBnK,KAAMpB,EAAM8B,SAASV,OAGF,SAACjC,GACxB,MAAO,CACHuN,OAAQ,SAACG,GAAD,OAAW1N,GL5DJ2N,EK4DoBD,EL3DhC,SAAC1N,EAAUC,EAAX8C,IACc5C,EADyB4C,EAAjB5C,eAGhB8B,OAAO2L,2BACZD,EAAY3B,SACZ2B,EAAY1B,UACdzL,KAAK,WACHR,EAAS,CAAES,KAAM,oBAClBC,MAAM,SAACC,GACNX,EAAS,CAAES,KAAM,cAAeE,aAVtB,IAACgN,KK+DRjL,CAA6CgK,GCvDtDmB,6MACFhN,MAAQ,CACJqE,QAAS7D,EAAKE,MAAM2D,QACpBC,QAAS9D,EAAKE,MAAM4D,QACpBC,OAAQ/D,EAAKE,MAAM6D,OACnBC,OAAQhE,EAAKE,MAAM8D,OACnBE,MAAOlE,EAAKE,MAAMgE,MAClBiC,KAAMnG,EAAKE,MAAMiG,KACjBM,YAAa,MAmBjBpG,aAAe,SAACP,GACZ,GAAQ,MAALA,EAAU,CACT,IAAMW,EAAOX,EAAEU,OAAOC,KAChBC,EAAQZ,EAAEU,OAAOE,MACjBP,EAAUG,OAAOoG,KAAK1G,EAAKE,MAAMC,SACnCsG,EAAc,GAClB,GAAG/F,EAAM0D,OAAS,GAAgB,MAAXjE,EAAgB,CACnC,IAAMwG,EAAQ,IAAIC,OAAJ,IAAAC,OAAenG,GAAS,KACtC+F,EAActG,EAAQ+E,OAAOvB,OAAO,SAAAmD,GAAC,OAAIH,EAAMI,KAAKD,KAExD9G,EAAKC,SAAS,eAAAyB,EAAA,OAAAA,EAAA,GAAApB,OAAAC,EAAA,EAAAD,CAAAoB,EACTjB,EAAOC,GADEJ,OAAAC,EAAA,EAAAD,CAAAoB,EAAA,cAAApB,OAAAC,EAAA,EAAAD,CAAA,GAGLG,EAAOgG,IAHF/E,QA8BtB7B,aAAe,SAACC,GACZA,EAAEC,iBACF,IAAImE,EAAQC,OAAOnE,EAAKR,MAAM0E,OAC1B+C,EAAKjH,EAAKR,MAAMuE,OAChBmD,EAAKlH,EAAKR,MAAMwE,OAChBmD,EAAKnH,EAAKR,MAAMqE,QAChBuD,EAAKpH,EAAKR,MAAMsE,QAEfI,EAAQ,IAAMA,GAAQ,GAA4C,GAAtClE,EAAKR,MAAM0E,MAAMkC,WAAWhC,OAMnDD,OAAOkD,UAAUnD,GAMnBlE,EAAKE,MAAMC,QAAQgH,IACvBnH,EAAKE,MAAMC,QAAQ8G,IACnBjH,EAAKE,MAAMC,QAAQiH,IACnBpH,EAAKE,MAAMC,QAAQ+G,GAEmB,IAAnC,IAAII,IAAI,CAACH,EAAIC,EAAIH,EAAIC,IAAKK,MACzBvH,EAAKE,MAAMuM,SAASzM,EAAKE,MAAMiK,MAAMC,OAAOsC,QAAS1M,EAAKR,OAC1DQ,EAAKC,SAAS,CACVL,QAAS,iBAEb+H,OAAOC,MAAM,iBAEb5H,EAAKC,SAAS,CACVL,QAAS,KACTD,MAAO,yDAIfK,EAAKC,SAAS,CACVL,QAAS,KACTD,MAAO,6CAzBXK,EAAKC,SAAS,CACVL,QAAS,KACTD,MAAO,4BARXK,EAAKC,SAAS,CACVL,QAAS,KACTD,MAAO,yGAlEA,IAAAuC,EACUvB,KAAKT,MAAfiC,GADAD,EACT/B,QADS+B,EACAC,OACiB,MAAtBxB,KAAKT,MAAMC,SAAyBG,OAAOoG,KAAK/F,KAAKT,MAAMC,SACrE,IAAMyD,EAAgB,MAATzB,EAAgB,KAAOA,EAAMxB,KAAKT,MAAMiK,MAAMC,OAAOsC,SACrD,OAAT9I,GACAjD,KAAKV,SAAS,iBAAO,CACjB4D,QAASD,EAAKC,QACdC,QAASF,EAAKE,QACdC,OAAQH,EAAKG,OACbC,OAAQJ,EAAKI,OACbE,MAAON,EAAKM,oDAwBLzD,EAAMC,GACrBC,KAAKV,SAAS,kBAAAK,OAAAC,EAAA,EAAAD,CAAA,CACVmG,YAAYnG,OAAAC,EAAA,EAAAD,CAAA,GACPG,EAAO,KAEXA,EAAOC,+CAIED,GAAM,IAAAqH,EAAAnH,KACd8F,EAAc9F,KAAKnB,MAAMiH,YAAYhG,GAC3C,OAAkB,MAAfgG,GAA8C,IAAvBA,EAAYrC,OAC3B,KAGPnG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBACTqI,EAAYrB,IAAI,SAAC4C,GAAD,OAAU/J,EAAAC,EAAAC,cAAA,MAAIyH,IAAKoC,EAAMC,QAAS,kBAAMH,EAAKI,mBAAmBzH,EAAMuH,KAAQA,uCAmDnG,IAAArD,EACqBhE,KAAKT,MAAxBC,EADFwE,EACExE,QAASgC,EADXwC,EACWxC,MACfhC,EAAgC,MAAtBQ,KAAKT,MAAMC,QAAkB,KAAOG,OAAOoG,KAAK/F,KAAKT,MAAMC,SAC/C,MAATgC,GAAuBA,EAAMxB,KAAKT,MAAMiK,MAAMC,OAAOsC,SAClE,MAA0B,iBAAvB/L,KAAKnB,MAAMI,SACVe,KAAKV,SAAS,CACVL,QAAS,OAEN3B,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAUC,GAAG,YAErBP,KAAKT,MAAMU,KAAKC,IAEf5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAM0H,GAAG,OAAO/E,SAAWH,KAAKd,cAChC5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVuC,KAAKnB,MAAMG,MAAQ1B,EAAAC,EAAAC,cAAA,SAAIwC,KAAKnB,MAAMG,OAAa,MAEpD1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACVuC,KAAKnB,MAAMI,QAAU3B,EAAAC,EAAAC,cAAA,SAAIwC,KAAKnB,MAAMI,SAAe,MAEpD3B,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SACIiB,KAAK,OACL+I,aAAa,MACbC,MAAOjI,EACPM,KAAK,UACLO,YAAa,SACbD,SAAWJ,KAAKN,aAChBK,MAAOC,KAAKnB,MAAMqE,UACjBlD,KAAK0H,kBAAkB,WAC5BpK,EAAAC,EAAAC,cAAA,SACIiB,KAAK,OACL+I,aAAa,MACbC,MAAOjI,EACPM,KAAK,UACLO,YAAY,SACZD,SAAWJ,KAAKN,aAChBK,MAAOC,KAAKnB,MAAMsE,UACjBnD,KAAK0H,kBAAkB,WAC5BpK,EAAAC,EAAAC,cAAA,SACIiB,KAAK,OACL+I,aAAa,MACbC,MAAOjI,EACPM,KAAK,SACLO,YAAY,QACZD,SAAWJ,KAAKN,aAChBK,MAAOC,KAAKnB,MAAMuE,SACjBpD,KAAK0H,kBAAkB,UAC5BpK,EAAAC,EAAAC,cAAA,SACIiB,KAAK,OACL+I,aAAa,MACbC,MAAOjI,EACPM,KAAK,SACLO,YAAY,QACZD,SAAWJ,KAAKN,aAChBK,MAAOC,KAAKnB,MAAMwE,SACjBrD,KAAK0H,kBAAkB,UAC5BpK,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACIiB,KAAK,OACLqB,KAAK,QACL0H,aAAa,MACbnH,YAAY,gBACZN,MAAOC,KAAKnB,MAAM0E,MAClBnD,SAAWJ,KAAKN,eACpBpC,EAAAC,EAAAC,cAAA,UAAQiB,KAAK,UAAb,WAKDnB,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAUC,GAAG,kBAvLTC,aAyMRC,cACXC,YAdoB,SAAC7B,GACrB,MAAM,CACFoB,KAAMpB,EAAM8B,SAASV,KACrBT,QAASX,EAAM+B,UAAUC,KAAKrB,QAC9BgC,MAAO3C,EAAM+B,UAAUC,KAAKW,QAGT,SAACxD,GACxB,MAAO,CACH8N,SAAU,SAAC5G,EAAIjC,GAAL,OAAcjF,EX9LR,SAACkH,EAAIjC,GACzB,OAAO,SAACjF,EAAUC,EAAXC,GAAqDA,EAA/BC,aAEPC,EAFsCF,EAAlBE,gBAG5BC,WAAW,SAASC,IAAI4G,GAAI3G,OAAO,CACzC2E,QAASD,EAAKC,QACdC,QAASF,EAAKE,QACdC,OAAQH,EAAKG,OACbC,OAAQJ,EAAKI,OACbE,MAAON,EAAKM,QAEf/E,KAAK,WACFR,EAAS,CAACS,KAAM,cAAewE,WAElCvE,MAAM,SAACC,GACJX,EAAS,CAACS,KAAM,oBAAqBE,WW+KRmN,CAAS5G,EAAIjC,QAMlDhC,2BAAiB,CACb,CAAE5C,WAAY,WACd,CAAEA,WAAY,WAJPoC,CAMZoL,GChNGG,6MACFnN,MAAQ,CACJoN,YAAa,MAGjBvM,aAAe,SAACP,GACZ,IAAM+M,EAAM/M,EAAEU,OACd0K,QAAQC,IAAI0B,GACJ,MAAL/M,GAAoB,MAAP+M,IACZ3B,QAAQC,IAAI0B,GACZ7M,EAAKC,SAAS,iBAAO,CACjB2M,YAAaC,EAAInM,aAK7Bb,aAAe,SAACC,GACZA,EAAEC,0FAKF,OACI9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAM0H,GAAG,OAAO/E,SAAWH,KAAKd,cAChC5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVuC,KAAKnB,MAAMG,MAAQ1B,EAAAC,EAAAC,cAAA,SAAIwC,KAAKnB,MAAMG,OAAa,MAEpD1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACVuC,KAAKnB,MAAMI,QAAU3B,EAAAC,EAAAC,cAAA,SAAIwC,KAAKnB,MAAMI,SAAe,MAExD3B,EAAAC,EAAAC,cAAA,2DACIF,EAAAC,EAAAC,cAAA,SACIiB,KAAK,OACL+I,aAAa,MACb1H,KAAK,uBACLO,YAAY,uBACZD,SAAWJ,KAAKN,aAChBK,MAAOC,KAAKnB,MAAMoN,cACtB3O,EAAAC,EAAAC,cAAA,UAAQiB,KAAK,UAAb,kBAvCO+B,aCArB2L,GDyDS1L,YACXC,YAZoB,SAAC7B,GACrB,MAAM,CACFW,QAASX,EAAM+B,UAAUC,KAAKrB,UAGX,SAACxB,GACxB,MAAO,CACH0H,WAAY,SAACzC,GAAD,OAAUjF,EAAS0H,EAAWzC,QAM9ChC,2BAAiB,CACb,CAAE5C,WAAY,aAHPoC,CAKbuL,8MC5DE1E,QAAU,SAACnI,GACkB,MAAtBE,EAAKE,MAAMC,SACOG,OAAOoG,KAAK1G,EAAKE,MAAMC,SAC7B8D,QAAQ,SAAAxC,GACfzB,EAAKE,MAAM6M,aAAatL,KAE5BkG,OAAOC,MAAM,wBAEbD,OAAOC,MAAM,iGAOjB,OACI3J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,uEACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mCAAmC6J,QAAUtH,KAAKsH,SAApE,iCArBO9G,cAuCZC,eACXC,YAZoB,SAAC7B,GACrB,MAAM,CACFW,QAASX,EAAM+B,UAAUC,KAAKrB,UAGX,SAACxB,GACxB,MAAO,CACHoO,aAAc,SAACtL,GAAD,OAAY9C,GjBKLF,EiBL2BgD,EjBM7C,SAAC9C,EAAUC,EAAXoO,GAAsDA,EAAhClO,aAEPC,EAFuCiO,EAAnBjO,gBAG5BC,WAAW,WAAWC,IAAIR,GAAYwO,SAC/C9N,KAAK,WACFR,EAAS,CAACS,KAAM,iBAAkBX,iBAErCY,MAAM,SAACC,GACJX,EAAS,CAACS,KAAM,uBAAwBE,aATxB,IAACb,MiBCzBmD,2BAAiB,CACb,CAAE5C,WAAY,aAHPoC,CAKb0L,GC5CII,8MAEFjF,QAAU,SAACnI,GACgB,MAApBE,EAAKE,MAAMiC,OACK7B,OAAOoG,KAAK1G,EAAKE,MAAMiC,OAC7B8B,QAAQ,SAAAL,GACb5D,EAAKE,MAAMiN,WAAWvJ,KAE1B+D,OAAOC,MAAM,qBAEbD,OAAOC,MAAM,kGAMjB,OACI3J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,0EACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mCAAmC6J,QAAUtH,KAAKsH,SAApE,8BApBS9G,aAsCdC,eACXC,YAZoB,SAAC7B,GACrB,MAAM,CACF2C,MAAO3C,EAAM+B,UAAUC,KAAKW,QAGT,SAACxD,GACxB,MAAO,CACHwO,WAAY,SAACvJ,GAAD,OAAUjF,GdNHkH,EcMuBjC,EdLvC,SAACjF,EAAUC,EAAXqH,GAAqDA,EAA/BnH,aAEPC,EAFsCkH,EAAlBlH,gBAG5BC,WAAW,SAASC,IAAI4G,GAAIoH,SACrC9N,KAAK,WACFR,EAAS,CAACS,KAAM,cAAeyG,SAElCxG,MAAM,SAACC,GACJX,EAAS,CAACS,KAAM,oBAAqBE,aATvB,IAACuG,McYvBjE,2BAAiB,CACb,CAAE5C,WAAY,WAHPoC,CAKb8L,IC3CIE,oLAEE,OACInP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,SACAH,EAAAC,EAAAC,cAACkP,GAAD,eANYlM,aCI1BmM,IDiBSlM,YACXC,YAPoB,SAAC7B,GACrB,MAAM,CACF2C,MAAO3C,EAAM+B,UAAUC,KAAKW,QAKP,MACzBP,2BAAiB,CACb,CAAE5C,WAAY,WAHPoC,CAKbgM,+MCrBE5N,MAAQ,CACJ+N,YAAY,KAGhBlN,aAAe,SAACP,GACZE,EAAKC,SAAS,CACVyK,QAAQpK,OAAA0G,EAAA,EAAA1G,CAAA,GACDN,EAAKR,MAAMkL,QADXpK,OAAAC,EAAA,EAAAD,CAAA,GAEFR,EAAEU,OAAOqF,GAAK/F,EAAEU,OAAOE,aAKpCb,aAAe,SAACC,GACZA,EAAEC,iBACCC,EAAKR,MAAMkL,QAAQ8C,OAASxN,EAAKE,MAAMU,KAAK4M,OAC3CxN,EAAKC,SAAS,CACVsN,YAAY,6EAOpB,OAAG5M,KAAKnB,MAAM+N,WAENtP,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEfH,EAAAC,EAAAC,cAACkP,GAAD,OAEApP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAACsP,GAAD,SAOZxP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAM2C,SAAUH,KAAKd,aAAczB,UAAU,SAC7CH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,qDAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAO6M,QAAQ,SAAf,uBACA/M,EAAAC,EAAAC,cAAA,SAAOiB,KAAK,QAAQyG,GAAG,QAAQ9E,SAAUJ,KAAKN,eAC9CpC,EAAAC,EAAAC,cAAA,UAAQiB,KAAK,UAAb,wBArDD+B,cA2ERC,eACXC,YAboB,SAAC7B,GACrB,MAAM,CACFW,QAASX,EAAM+B,UAAUC,KAAKrB,QAC9BS,KAAMpB,EAAM8B,SAASV,OAGF,SAACjC,GACxB,MAAO,CACH0H,WAAY,SAACzC,GAAD,OAAUjF,EAAS0H,EAAWzC,QAM9ChC,2BAAiB,CACb,CAAE5C,WAAY,aAHPoC,CAKbkM,ICvDaI,oLArBX,OACEzP,EAAAC,EAAAC,cAACwP,EAAA,EAAD,KACA1P,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACyP,EAAD,MACA3P,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,KACE5P,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWjQ,IACjCC,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWpM,IACxC5D,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAW3F,IACtCrK,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAOE,KAAK,sBAAsBC,UAAWlE,IAC7C9L,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAOE,KAAK,OAAOC,UAAW1O,IAC9BtB,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAOE,KAAK,eAAeC,UAAWxD,IACtCxM,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAW5C,IACjCpN,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAOE,KAAK,kBAAkBC,UAAWzB,IACzCvO,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWX,eAf3BnM,aCDE+M,QACW,cAA7BvG,OAAOwG,SAASC,UAEe,UAA7BzG,OAAOwG,SAASC,UAEhBzG,OAAOwG,SAASC,SAASjE,MACvB,wEClBAkE,GAAY,CACdlO,QAAS,IA6BEmO,GA1BO,WAA+B,IAA9B9O,EAA8BkM,UAAAtH,OAAA,QAAAb,IAAAmI,UAAA,GAAAA,UAAA,GAAtB2C,GAAWE,EAAW7C,UAAAtH,OAAA,EAAAsH,UAAA,QAAAnI,EACjD,OAAOgL,EAAOnP,MACV,IAAK,gBACD,OAAOkB,OAAA0G,EAAA,EAAA1G,CAAA,GACAd,EADP,CAEIW,QAAQG,OAAAkO,GAAA,EAAAlO,CAAKd,EAAMW,SAAZ0G,OAAA,CAAqB0H,EAAO9M,WAE3C,IAAK,aACD,OAAOnB,OAAA0G,EAAA,EAAA1G,CAAA,GACAd,EADP,CAEIW,QAAQG,OAAAkO,GAAA,EAAAlO,CAAKd,EAAMW,SAAZ0G,OAAA,CAAqB0H,EAAO9P,WAAY8P,EAAO7P,WAE9D,IAAK,WACD,OAAO4B,OAAA0G,EAAA,EAAA1G,CAAA,GACAd,EADP,CAEIW,QAAQG,OAAAkO,GAAA,EAAAlO,CAAKd,EAAMW,SAAZ0G,OAAA,CAAqB0H,EAAO9P,WAAY8P,EAAO5I,SAE9D,IAAK,iBACD,OAAOrF,OAAA0G,EAAA,EAAA1G,CAAA,GACCd,EADR,CAEIW,QAAS,KAEjB,QACI,OAAOX,IC3Bb6O,GAAY,CACdlM,MAAO,IAgCIsM,GA7BK,WAA+B,IAA9BjP,EAA8BkM,UAAAtH,OAAA,QAAAb,IAAAmI,UAAA,GAAAA,UAAA,GAAtB2C,GAAWE,EAAW7C,UAAAtH,OAAA,EAAAsH,UAAA,QAAAnI,EAC/C,OAAOgL,EAAOnP,MACV,IAAK,cACD,OAAAkB,OAAA0G,EAAA,EAAA1G,CAAA,GACOd,EADP,CAEI2C,MAAM7B,OAAAkO,GAAA,EAAAlO,CAAKd,EAAM2C,OAAZ0E,OAAA,CAAmB0H,EAAO3K,SAEvC,IAAK,cACD,OAAAtD,OAAA0G,EAAA,EAAA1G,CAAA,GACOd,EADP,CAEI2C,MAAO3C,EAAM2C,MAAMiD,IAAI,SAACxB,EAAMiC,GAC1B,OAAIA,IAAO0I,EAAO1I,GACTvF,OAAOoO,OAAO,GAAI9K,EAAM,CAC7B+K,WAAW,IAGRnP,EAAM2C,UAGzB,IAAK,cACD,OAAA7B,OAAA0G,EAAA,EAAA1G,CAAA,GACOd,EADP,CAEI2C,MAAO,KAEf,QACI,OAAO3C,IC7Bb6O,GAAY,CACdtD,UAAW,KACX6D,aAAc,MAmCHC,GAhCK,WAA+B,IAA9BrP,EAA8BkM,UAAAtH,OAAA,QAAAb,IAAAmI,UAAA,GAAAA,UAAA,GAAtB2C,GAAWE,EAAW7C,UAAAtH,OAAA,EAAAsH,UAAA,QAAAnI,EAC/C,OAAOgL,EAAOnP,MACV,IAAK,cACD,OAAOkB,OAAA0G,EAAA,EAAA1G,CAAA,GACAd,EADP,CAEIuL,UAAW,iBAEnB,IAAK,gBACD,OAAOzK,OAAA0G,EAAA,EAAA1G,CAAA,GACAd,EADP,CAEIuL,UAAW,OAEnB,IAAK,kBACD,MAAM,CACFvL,SAER,IAAK,iBACD,OAAAc,OAAA0G,EAAA,EAAA1G,CAAA,GACOd,EADP,CAEIuL,UAAW,KACX6D,cAAc,IAEtB,IAAK,eACD,OAAAtO,OAAA0G,EAAA,EAAA1G,CAAA,GACOd,EADP,CAEIuL,UAAWwD,EAAOjP,IAAIwP,UAE9B,QACI,OAAOtP,aClBJuP,GARKC,YAAgB,CAChCvN,OAAQ6M,GACR1K,KAAM6K,GACN7N,KAAMiO,GACNtN,UAAW0N,oBACX3N,SAAU4N,sDCEZ5N,KAAS6N,cARI,CACXC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,iBAIrBnO,KAASC,YAAYmO,SAAS,CAAEC,uBAAuB,IACxCrO,UAAf,YCJIsO,GAAQC,YAAYd,GACtB3N,YACI0O,YAAgBC,KAAMC,kBAAkB,CAAClR,0BAAaC,gCACtDkR,0BAAeC,IACfC,6BAAmBD,GAAU,CAACE,mBAAmB,MAGzDR,GAAMS,oBAAoBlR,KAAK,WAC3BmR,IAASC,OAAOtS,EAAAC,EAAAC,cAACqS,EAAA,EAAD,CAAUZ,MAAOA,IAAO3R,EAAAC,EAAAC,cAACsS,GAAD,OAAoBjJ,SAASC,eAAe,SN4GlF,kBAAmBiJ,WACrBA,UAAUC,cAAcC,MAAMzR,KAAK,SAAA0R,GACjCA,EAAaC","file":"static/js/main.07ac075d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Euchre.0bd882d4.jpg\";","import React from 'react'\nimport Euchre from '../Euchre.jpg'\n\nconst Home = () => {\n    return(\n        <div className=\"container\">\n            <h4 className=\"center\">Home</h4>\n            <img src={Euchre} alt=\"Euchre\"/>\n            <p className=\"center pink\">Created by JK and LO</p>\n        </div>\n    );\n}\n\nexport default Home","export const createPlayer = (player) => {\n    return (dispatch, getState, {getFirebase, getFirestore }) => {\n        // make async call to database\n        const firestore = getFirestore();\n        // firestore.collection(\"players\").add(player)\n        firestore.collection(\"players\").doc(player.Name).set(player)\n        .then(() => {\n            dispatch({type: 'CREATE_PLAYER', player})\n        })\n        .catch((err) => {\n            dispatch({type: \"CREATE_PLAYER_ERROR\", err })\n        })\n    }\n}\n\nexport const addPlayerWeight = (playerName, weight) => {\n    return (dispatch, getState, {getFirebase, getFirestore }) => {\n        // make async call to database\n        const firestore = getFirestore();\n        firestore.collection(\"players\").doc(playerName).update({\n            weight: weight\n        })\n        .then(() => {\n            dispatch({type: 'ADD_WEIGHT', weight})\n        })\n        .catch((err) => {\n            dispatch({type: \"ADD_WEIGHT_ERROR\", err })\n        })\n    }\n}\n\nexport const addPlayerRank = (playerName, rank) => {\n    return (dispatch, getState, {getFirebase, getFirestore }) => {\n        // make async call to database\n        const firestore = getFirestore();\n        firestore.collection(\"players\").doc(playerName).update({\n            rank: rank\n        })\n        .then(() => {\n            dispatch({type: 'ADD_RANK', rank})\n        })\n        .catch((err) => {\n            dispatch({type: \"ADD_RANK_ERROR\", err })\n        })\n    }\n}\n\nexport const deletePlayer = (playerName) => {\n    return (dispatch, getState, {getFirebase, getFirestore }) => {\n        // make async call to database\n        const firestore = getFirestore();\n        firestore.collection(\"players\").doc(playerName).delete()\n        .then(() => {\n            dispatch({type: 'DELETE_PLAYERS', playerName})\n        })\n        .catch((err) => {\n            dispatch({type: \"DELETE_PLAYERS_ERROR\", err })\n        })\n    }\n}","import React, { Component } from 'react'\nimport { createPlayer } from \"../store/actions/playerActions\"\nimport { connect } from \"react-redux\";\nimport {Redirect } from \"react-router-dom\"\nimport { compose } from \"redux\";\nimport { firestoreConnect } from 'react-redux-firebase';\n\nclass AddPlayer extends Component {\n    state = {\n        Name: null,\n        Skill:\"-\",\n        weight: 0,\n        error: null,\n        success: null\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if(this.state.Name == null){\n            this.setState({\n                error: \"No input received\",\n                success: null\n            })\n        }\n        else if(this.props.players != null && this.props.players[this.state.Name]){\n            this.setState({\n                error: \"Unable to Add Player: Player is not unique\",\n                success: null\n            })\n        } else {\n            this.props.createPlayer(this.state);\n            this.setState({\n                error: null,\n                success: \"Player successfully added\",\n                Name: null,\n                Skill: \"-\",\n                weight: 0,\n            })\n        }\n    }\n\n    handleChange = (e) =>{\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    render(){\n        const { auth } = this.props;\n        if(!auth.uid) {\n            return <Redirect to=\"/signin\"/>\n        }\n        return (\n            \n            <div className=\"container\">\n            \n            <h4 className=\"center\">Add Player</h4>\n                <form onSubmit={this.handleSubmit}>\n                    <label>Add New Player</label>\n                    <input type=\"text\" onChange={this.handleChange} name=\"Name\" placeholder=\"Name\"/>\n                    <button type=\"submit\"> Add </button>\n                </form>\n                <div className=\"red-text center\">\n                    {this.state.error ? <p>{this.state.error}</p> : null}\n                </div> \n                <div className=\"black-text center\">\n                    {this.state.success ? <p>{this.state.success}</p> : null}\n                </div> \n            </div>\n        )\n    }\n}\n\nconst mapStatetoProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        players: state.firestore.data.players\n    }\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        createPlayer: (player) => dispatch(createPlayer(player))\n    }\n}\n\nexport default compose(\n    connect(mapStatetoProps, mapDispatchtoProps),\n    firestoreConnect([\n        { collection: 'players' }\n    ]))(AddPlayer);","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport AddPlayer from \"./AddPlayer\";\nimport { addPlayerWeight, addPlayerRank } from \"../store/actions/playerActions\";\n// import Player from \"./Player\"\n\nclass Players extends Component {\n    state = {\n        weightList: [],\n        mounted: false\n    }\n    componentDidMount(){\n        this.setState({\n            mounted: true\n        })\n    }\n    componentWillMount(){\n        this.addWeights();\n    }\n    addWeights = async () => {\n        const { players, auth, games } = this.props;\n        if(!players){\n            return <p></p>\n        }\n        for(var p of players){\n            var win = games == null ? null :\n                games.filter(game => {\n                return (game.winner1 == p.Name || game.winner2 == p.Name)\n            })\n            var loss = games == null ? null :\n                games.filter(game => {\n                return (game.loser1 == p.Name || game.loser2 == p.Name)\n            })\n\n            var plus = 0;\n            var totalPoints = 0;\n            var temp;\n            var temp = win == null ? 0 : win.forEach(function(game) {\n                plus += 10 - game.score;\n                totalPoints += 10;\n            });\n            temp = loss == null ? 0 : loss.forEach(function(game) {\n                plus += game.score - 10;\n                totalPoints += Number(game.score);\n            });\n            var winsize = win === null ? 0 : win.length;\n            var losssize = loss == null ? 0 : loss.length;\n\n            var totalGames = winsize + losssize;\n            var winLoss = totalGames != 0 ? winsize * 100 / totalGames : 0;\n            var average = totalGames != 0 ? totalPoints / totalGames : 0;\n            const weight = totalGames > 14 ? winLoss * .002 + average * .08 : 0;\n            temp = this.props ? this.props.addPlayerWeight(p.Name, weight) : null;\n        }\n    }\n\n    addRanks = async () =>{\n        const { players, auth, games } = this.props;\n        if(!players){\n            return <p></p>\n        }\n        var playerRanks = players.filter(p => p.weight != 0);\n        if(this.state.mounted && playerRanks.length != 0){\n            var sorted = playerRanks.slice().sort((a,b) => (a.weight < b.weight) ? 1 : ((b.weight < a.weight) ? -1 : 0))\n            var ranks = playerRanks.slice().map(function(v){ return sorted.indexOf(v)+1 });\n            for(var index in sorted){\n                var temp = this.props ? this.props.addPlayerRank(playerRanks[index].Name, ranks[index]) : null;\n            }\n            this.setState({\n                mounted: false\n            })\n        }\n    }\n    \n    render(){\n        this.addRanks();\n        const { players, auth, games } = this.props;\n        if(!players){\n            return <p></p>\n        }\n        \n        const playerList = Object.values(players).map(player => {\n            const rank = player.weight === 0 ? null : <p className=\"white-text\">Rank: {player.rank}</p>;\n            return (\n                <div className=\"post card pink\" key={player.id}>\n                    <div className=\"card-content\">\n                    <Link to={ '/players/' + player.id}>\n                        <p className=\"card-title white-text\">{player.Name}</p>\n                        {rank}\n                    </Link>\n                    </div>\n                </div>\n            )\n        })\n        return(\n            <div className=\"container\">\n            {auth.uid ? <AddPlayer/>: null}\n                <h4 className=\"center\">Players</h4>\n                <div className=\"container\">\n\t\t\t\t\t<div className=\"card-content\">\n                    {playerList}\n\t\t\t\t    </div>\n\t\t\t    </div>\n            </div>\n        );\n    }\n}\n\nconst mapStatetoProps = (state) => {\n    return {\n        players: state.firestore.ordered.players,\n        auth: state.firebase.auth,\n        games: state.firestore.ordered.games\n    }\n}\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        addPlayerWeight: (playerName, weight) => dispatch(addPlayerWeight(playerName, weight)),\n        addPlayerRank: (playerName, weight) => dispatch(addPlayerRank(playerName, weight))\n    }\n}\nexport default compose(\n    connect(mapStatetoProps, mapDispatchtoProps),\n    firestoreConnect([\n        { collection: 'players' },\n        { collection: 'games' }\n    ])\n)(Players)","import React, { Component } from 'react';\n\nclass Game extends Component {\n    render(){\n\t\tvar date = this.props.date == null ? null : this.props.date.toString();\n        return(\n            <div className=\"container\">\n\t\t\t\t<div className=\"game card pink\">\n\t\t\t\t\t<div className=\"card-content\">\n\t\t\t\t\t\t<div className=\"winners-losers\">\n\t\t\t\t\t\t\t<p className=\"winners white-text\"><span className=\"winners-text\">Winners: </span>\n\t\t\t\t\t\t\t{this.props.winner1 + ', ' + this.props.winner2}</p>\n\t\t\t\t\t\t\t<p className=\"losers white-text\"><span className=\"losers-text\">Losers: </span>\n\t\t\t\t\t\t\t{this.props.loser1 + ', ' + this.props.loser2}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p className=\"score white-text\"><span className=\"score-text\">Losers' score: </span>{this.props.score}</p>\n\t\t\t\t\t\t<p className=\"score white-text\"><span className=\"score-text\">Date: </span>\n\t\t\t\t\t\t{date}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n        )\n    }\n}\nexport default Game","export const createGame = (game) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        // make async call to database\n        const firestore = getFirestore();\n\n        firestore.collection(\"games\").add(game)\n        .then(() => {\n            dispatch({type: 'CREATE_GAME', game})\n        })\n        .catch((err) => {\n            dispatch({type: \"CREATE_GAME_ERROR\", err})\n        })\n    }\n}\n\nexport const editGame = (id, game) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        // make async call to database\n        const firestore = getFirestore();\n        firestore.collection(\"games\").doc(id).update({\n            winner1: game.winner1,\n            winner2: game.winner2,\n            loser1: game.loser1,\n            loser2: game.loser2,\n            score: game.score\n        })\n        .then(() => {\n            dispatch({type: 'UPDATE_GAME', game})\n        })\n        .catch((err) => {\n            dispatch({type: \"UPDATE_GAME_ERROR\", err})\n        })\n    }\n}\n\nexport const deleteGame = (id) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        // make async call to database\n        const firestore = getFirestore();\n        firestore.collection(\"games\").doc(id).delete()\n        .then(() => {\n            dispatch({type: 'DELETE_GAME', id})\n        })\n        .catch((err) => {\n            dispatch({type: \"DELETE_GAME_ERROR\", err})\n        })\n    }\n}","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { createGame } from \"../store/actions/gameActions\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from 'react-redux-firebase';\nimport \"../AutocompleteText.css\"\n\nclass AddGame extends Component {\n    state = {\n        game: {\n            winner1: \"\",\n            winner2: \"\",\n            loser1: \"\",\n            loser2: \"\",\n            score: -1,\n            date: new Date().toString(),\n        },\n        suggestions: {\n            winner1: [],\n            winner2: [],\n            loser1: [],\n            loser2: []\n        }\n    }\n\n    handleChange = (e) => {\n        if(e != null){\n\n            const name = e.target.name\n            const value = e.target.value;\n            const players = Object.keys(this.props.players);\n            let suggestions = [];\n            if(value.length > 0 && players != null){\n                const regex = new RegExp(`^${value}`, 'i');\n                suggestions = players.sort().filter(x => regex.test(x));\n            }\n            this.setState(() => ({\n                game:{\n                    ...this.state.game,\n                    [name]: value\n                },\n                suggestions:{\n                    [name]: suggestions\n                },\n            }));\n        }\n    }\n\n    suggestionSelected(name, value){\n        this.setState(()=>({\n            suggestions:{\n                [name]: []\n            },\n            game:{\n                ...this.state.game,\n                [name]: value\n            }\n        }))\n    }\n\n    renderSuggestions(name) {\n        const suggestions = this.state.suggestions[name];\n        if(suggestions == null || suggestions.length === 0){\n            return null;\n        }\n        return(\n            <ul className=\"AutoCompleteText\" >\n                {suggestions.map((item) => <li key={item} onClick={() => this.suggestionSelected(name, item)}>{item}</li>)}\n            </ul>\n        );\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        var score = Number(this.state.game.score);\n        var l1 = this.state.game.loser1;\n        var l2 = this.state.game.loser2;\n        var w1 = this.state.game.winner1;\n        var w2 = this.state.game.winner2;\n\n        if(!(score < 10 && score >=0) || this.state.game.score.toString().length != 1){\n            this.setState({\n                success: null,\n                error: \"Score is invalid\"\n            })\n        }\n        else if(!(Number.isInteger(score))){\n            this.setState({\n                success: null,\n                error: \"Score is not an Integer\"\n            })\n        }\n        else if(this.props.players[w1] && \n            this.props.players[l1] &&\n            this.props.players[w2] &&\n            this.props.players[l2])\n            {\n            if(new Set([w1, w2, l1, l2]).size === 4){\n                this.props.createGame(this.state.game);\n                document.getElementById(\"form\").reset();\n                this.setState({\n                    success: \"Game Added\",\n                    error: null,\n                    game: {\n                        winner1: '',\n                        winner2: '',\n                        loser1: '',\n                        loser2: '',\n                        score: -1,\n                        date: new Date().toString()\n                    }\n                })\n                window.alert(\"Game added\")\n                \n            } else{\n                this.setState({\n                    success: null,\n                    error: \"Players are not unique - no playing with yourself ;)\"\n                })\n            }\n        } else {\n            this.setState({\n                success: null,\n                error: \"At least one of the players is not valid\"\n            })\n        }\n    \n    }\n\n    resetState = (e) => {\n        this.setState({\n            game: {\n                winner1: \"\",\n                winner2: \"\",\n                loser1: \"\",\n                loser2: \"\",\n                score: -1,\n                date: new Date().toString(),\n            },\n            suggestions: {},\n            success: null,\n            error: null\n        })\n    }\n\n    render(){\n        const players = this.props.players == null ? null : Object.keys(this.props.players);\n        var error = this.state.error == null ? null : <p>{this.state.error}</p>\n        var success = this.state.success == null ? null : <p>{this.state.success}</p>\n        if(error != null || success != null){\n            var x = this.resetState\n        }\n        return(\n            <div className=\"container\">\n                <form id=\"form\" onSubmit={ this.handleSubmit }>\n                <div className=\"red-text center\">\n                    {error}\n                </div>  \n                <div className=\"black-text center\">\n                    {success}\n                </div>  \n                    <label>Winner</label>\n                    <input\n                        type=\"text\"\n                        autoComplete=\"off\" \n                        input={players} \n                        name=\"winner1\"\n                        placeholder=\"Winner\"\n                        onChange={ this.handleChange } \n                        value={this.state.game.winner1} />\n                        {this.renderSuggestions(\"winner1\")}\n                    <input\n                        type=\"text\"\n                        autoComplete=\"off\" \n                        input={players} \n                        name=\"winner2\"\n                        placeholder=\"Winner\"\n                        onChange={ this.handleChange } \n                        value={this.state.game.winner2} />\n                        {this.renderSuggestions(\"winner2\")}\n                    <input\n                        type=\"text\"\n                        autoComplete=\"off\" \n                        input={players} \n                        name=\"loser1\"\n                        placeholder=\"Loser\"\n                        onChange={ this.handleChange } \n                        value={this.state.game.loser1} />\n                        {this.renderSuggestions(\"loser1\")}\n                    <input\n                        type=\"text\"\n                        autoComplete=\"off\" \n                        input={players} \n                        name=\"loser2\"\n                        placeholder=\"Loser\"\n                        onChange={ this.handleChange } \n                        value={this.state.game.loser2} />\n                        {this.renderSuggestions(\"loser2\")}\n                    <label >Score</label>\n                    <input type=\"text\" name=\"score\" autoComplete=\"off\" placeholder=\"Loser's Score\" onChange={ this.handleChange} />\n                    <button type=\"submit\"> Add </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStatetoProps = (state) => {\n    return{\n        players: state.firestore.data.players\n    }\n} \nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        createGame: (game) => dispatch(createGame(game))\n    }\n}\n\nexport default compose(\n    connect(mapStatetoProps, mapDispatchtoProps),\n    firestoreConnect([\n        { collection: 'players' }\n    ])\n)(AddGame);","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport Game from './Game'\nimport AddGame from './AddGame';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\n\nclass Games extends Component {\n    addGame = (game) => {\n        let lst = this.state.listofGames;\n        lst.push(game);\n        this.setState({\n            listofGames: lst\n        })\n    }\n    render(){\n        const { auth } = this.props;\n        if(!this.props.games){\n            return <p></p>\n        }\n        const gameList = this.props.games.map(game => {\n            return (\n                <Link to={ '/games/' + game.id} key={game.id}>\n                    <Game winner1={game.winner1} winner2={game.winner2}\n                        loser1={game.loser1} loser2={game.loser2} \n                        score={game.score} date={game.date} key={game.id} />\n                </Link>\n            )\n        })\n        return(\n            <div className=\"container\">\n                <h4 className=\"center\">Games</h4>\n                {auth.uid ? <AddGame addGame={this.addGame}/>: null}\n                {gameList}\n            </div>\n        );\n    }\n}\n\nconst mapStatetoProps = (state) => {\n    return{\n        auth: state.firebase.auth,\n        games: state.firestore.ordered.games\n    }\n}\n\nexport default compose(\n    connect(mapStatetoProps),\n    firestoreConnect([{\n        collection: 'games',\n        orderBy: [\"date\", \"desc\"]\n    }])\n)(Games)","import React from 'react'\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to=\"/signin\">Sign In</NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default SignedOutLinks\n","import React from 'react'\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../store/actions/authActions\"\n\nconst SignedInLinks = (props) => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to=\"/add_account\">Add Account</NavLink></li>\n        <li><NavLink to=\"/settings\">Settings</NavLink></li>\n        <li><a onClick={props.signOut}>Sign Out</a></li>\n      </ul>\n    </div>\n  )\n}\n\nconst mapDispatchtoProps = (dispatch) =>{\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchtoProps)(SignedInLinks)","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.username,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: \"LOGIN_SUCCESS\"});\n        }).catch((err) => {\n            dispatch({ type: \"LOGIN_ERROR\", err});\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut()\n        .then(() => {\n            dispatch({type: \"SIGNOUT_SUCCESS\"})\n        });\n    }\n}\n\nexport const addAccount = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        console.log(newUser)\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.username,\n            newUser.password\n        )\n        .then(()=> {\n            dispatch({ type: \"SIGNUP_SUCCESS\"})\n        })\n        .catch((err) => {\n            dispatch({ type: \"SIGNUP_ERROR\", err})\n        })\n    }\n}","import React from 'react'\nimport { Link, NavLink } from 'react-router-dom';\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport { connect } from \"react-redux\";\n\nconst Navbar = (props) => {\n    const { auth } = props;\n    const links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />;\n    return(\n        <nav className=\"nav-wrapper pink\">\n            <div className=\"container\">\n                <a className=\"brand-logo white-text\">UW Euchre</a>\n                { links }\n                <ul className=\"right\">\n                    <li><Link to=\"/\">Home</Link></li>\n                    <li><NavLink to=\"/players\">Players</NavLink></li>\n                    <li><NavLink to=\"/games\">Games</NavLink></li>\n                </ul>\n\n            </div>\n        </nav>\n    )\n}\nconst mapStatetoProps = (state) => {\n    // console.log(state)\n    return {\n        auth: state.firebase.auth\n    }\n}\nexport default connect(mapStatetoProps)(Navbar);","import React, {Component} from 'react';\nimport Game from \"./Game\"\n\nclass PlayerStats extends Component {\n    \n    render(){\n        var plus = 0;\n        var totalPoints = 0;\n        var skunks = 0;\n        var timesskunked = 0;\n        const {playerGames, playerName} = this.props;\n        const win = playerGames == null ? null : playerGames.filter(game => {\n            return game.winner1 === playerName || game.winner2 === playerName;\n        });\n        const loss = playerGames == null ? null : playerGames.filter(game => {\n            return game.loser1 === playerName || game.loser2 === playerName;\n        });\n        \n        var temp = win == null ? 0 : win.forEach(function(game) {\n            plus += 10 - game.score;\n            totalPoints += 10;\n            skunks += Number(game.score) === 0 ? 1 : 0;\n        });\n        temp = loss == null ? 0 : loss.forEach(function(game) {\n            plus += game.score - 10;\n            totalPoints += Number(game.score);\n            timesskunked += Number(game.score) === 0 ? 1 : 0;\n        });\n\n        var wins = win == null ? 0 : win.length;\n        var losses = loss == null ? 0 : loss.length;\n        var totalGames = wins != null || losses != null ? wins + losses : 0;\n        var winLoss = totalGames != 0 ? wins * 100 / totalGames : 0;\n        const plusMinus = plus > 0 ? <span>+{plus}</span> : <span>{plus}</span>\n        var average = totalGames != 0 ? totalPoints / totalGames : 0;\n        const weight = totalGames > 14 ? winLoss * .002 + average * .08 : 0;\n\n        return(\n            <div className=\"player-skill white-text\">\n            <br></br>\n                <p> Wins: {wins}</p>\n                <p> Losses: {losses}</p>\n                <p> Total Games: {totalGames}</p>\n                <p> Win Loss Percentage: {Math.round(winLoss * 100) / 100}%</p>\n                <p>Plus-Minus: {plusMinus}</p>\n                <p> Cumulative Average: {Math.round(average * 100) / 100}</p>\n                <p> Weight: {weight}</p>\n                <br></br>\n                <p> Skunks: {skunks}</p>\n                <p> Times Skunked: {timesskunked}</p>\n            </div>\n        )\n    }\n\n}\n\nexport default PlayerStats;","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport PlayerStats from './PlayerStats';\nimport { addPlayerWeight } from \"../store/actions/playerActions\";\nimport Game from './Game'\n\nclass Player extends Component {\n    saveWeight(props, weight){\n        const a = this.props ? this.props.addPlayerWeight(this.props.player.Name, weight) : null;\n    }\n\n    render(){\n        const { player, allGames } = this.props;\n        const playersGames = allGames != null && player != null ? allGames.filter(function (game){\n            var x = game.winner1 === player.Name ||\n            game.winner2 === player.Name ||\n            game.loser1 === player.Name ||\n            game.loser2 === player.Name;\n            return x;\n        }): null;\n        if(!player){\n            return <p></p>\n        }\n\n        const gameList = playersGames == null ? null : playersGames.map(game => {\n            return (\n                <Game winner1={game.winner1} winner2={game.winner2}\n                loser1={game.loser1} loser2={game.loser2} score={game.score} date={game.date} key={Math.random()} />\n            )\n        })\n\n        return(\n            <div>\n                <div className=\"container\" key={this.props.match.params.id}>\n                    <div className=\"container\">\n                        <div className=\"card-content\">\n                            <div className=\"post card pink\">\n                                <div className=\"card-content\">\n                                    <p className=\"card-title white-text\">Name: {player.Name}</p>\n                                    <p className=\"player-skill white-text\">Rank: {player.rank}</p>\n                                    <PlayerStats \n                                        playerGames={allGames} \n                                        playerName={player.Name} \n                                        saveWeight={this.saveWeight}\n                                        props={this.props}/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <h4 className=\"center\">Games</h4>\n                    {gameList}\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStatetoProps = (state, ownProps) => {\n    const id = ownProps.match.params.player_id;\n    const players = state.firestore.data.players;\n    const player = players ? players[id] : null;\n    const allGames = state.firestore.ordered.games;\n    \n    return{\n        player: player,\n        allGames: allGames\n    }\n}\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        addPlayerWeight: (playerName, weight) => dispatch(addPlayerWeight(playerName, weight))\n    }\n}\nexport default compose(\n    connect(mapStatetoProps, mapDispatchtoProps),\n    firestoreConnect([\n        { collection: 'players' },\n        { collection: 'games' }\n    ])\n)(Player)","import React, {Component} from 'react'\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\"\nimport { addAccount } from \"../store/actions/authActions\"\n\nclass AddAccount extends Component {\n    state ={\n        newUser: {\n            username: '',\n            password: ''\n        },\n        submitted: false\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            newUser:{\n                ...this.state.newUser,\n                [e.target.id]: e.target.value\n            }\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.addAccount(this.state.newUser)\n        this.setState({\n            submitted: true\n        })\n    }\n\n    render(){\n        const { auth, authError } = this.props;\n        if(!auth.uid){\n            return <Redirect to=\"/signin\"/>\n        }\n        return(\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Add Account</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"username\">Username</label>\n                        <input type=\"text\" id=\"username\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink\">Sign Up</button>\n                    </div>\n                </form>\n                <div className=\"red-text center\">\n                {this.state.submitted ? \n                authError ? <p>{authError}</p> : <p>Account Created</p>: null}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStatetoProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        addAccount: (user) => dispatch(addAccount(user))\n    }\n}\nexport default connect(mapStatetoProps, mapDispatchtoProps)(AddAccount);","import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport {signIn }from \"../store/actions/authActions\"\nimport {Redirect } from \"react-router-dom\"\n\nexport class Signin extends Component {\n    state = {\n        username: null,\n        password: null\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n\n    handleChange = (e) =>{\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    render() {\n        const {authError, auth}= this.props;\n        if(auth.uid) {\n            return(\n                <Redirect to=\"/\"/>\n            )\n        }\n        return(\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"username\">Username</label>\n                        <input type=\"text\" id=\"username\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink\">Sign In</button>\n                        <div className=\"red-text center\">\n                        { authError ? <p>{authError}</p>: null }\n                    </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStatetoProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Signin)\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { editGame } from \"../store/actions/gameActions\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom'\nimport \"../AutocompleteText.css\"\n\nclass EditGame extends Component {\n    state = {\n        winner1: this.props.winner1,\n        winner2: this.props.winner2,\n        loser1: this.props.loser1,\n        loser2: this.props.loser2,\n        score: this.props.score,\n        date: this.props.date,\n        suggestions: {\n        }\n    }\n\n    componentDidMount(){\n        var { players, games } = this.props\n        players = this.props.players == null ? null : Object.keys(this.props.players);\n        const game = games == null ? null : games[this.props.match.params.game_id]\n        if (game !== null){\n            this.setState(() => ({\n                winner1: game.winner1,\n                winner2: game.winner2,\n                loser1: game.loser1,\n                loser2: game.loser2,\n                score: game.score\n            }));\n        }\n    }\n\n    handleChange = (e) => {\n        if(e != null){\n            const name = e.target.name\n            const value = e.target.value;\n            const players = Object.keys(this.props.players);\n            let suggestions = [];\n            if(value.length > 0 && players != null){\n                const regex = new RegExp(`^${value}`, 'i');\n                suggestions = players.sort().filter(x => regex.test(x));\n            }\n            this.setState(() => ({\n                [name]: value,\n                suggestions:{\n                    [name]: suggestions\n                },\n            }));\n        }\n    }\n\n    suggestionSelected(name, value){\n        this.setState(()=>({\n            suggestions:{\n                [name]: []\n            },\n            [name]: value\n        }))\n    }\n\n    renderSuggestions(name) {\n        const suggestions = this.state.suggestions[name];\n        if(suggestions == null || suggestions.length === 0){\n            return null;\n        }\n        return(\n            <ul className=\"AutoCompleteText\" >\n                {suggestions.map((item) => <li key={item} onClick={() => this.suggestionSelected(name, item)}>{item}</li>)}\n            </ul>\n        );\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        var score = Number(this.state.score);\n        var l1 = this.state.loser1;\n        var l2 = this.state.loser2;\n        var w1 = this.state.winner1;\n        var w2 = this.state.winner2;\n\n        if(!(score < 10 && score >=0) || this.state.score.toString().length != 1){\n            this.setState({\n                success: null,\n                error: \"Score is invalid\"\n            })\n        }\n        else if(!(Number.isInteger(score))){\n            this.setState({\n                success: null,\n                error: \"Score is not an Integer\"\n            })\n        }\n        else if(this.props.players[w1] && \n            this.props.players[l1] &&\n            this.props.players[w2] &&\n            this.props.players[l2])\n            {\n            if(new Set([w1, w2, l1, l2]).size === 4){\n                this.props.editGame(this.props.match.params.game_id, this.state);\n                this.setState({\n                    success: \"Game Updated\"\n                })\n                window.alert(\"Game Updated\")\n            } else{\n                this.setState({\n                    success: null,\n                    error: \"Players are not unique - no playing with yourself ;)\"\n                })\n            }\n        } else {\n            this.setState({\n                success: null,\n                error: \"At least one of the players is not valid\"\n            })\n        }\n    \n    }\n\n    render(){\n        var { players, games } = this.props\n        players = this.props.players == null ? null : Object.keys(this.props.players);\n        const game = games == null ? null : games[this.props.match.params.game_id]\n        if(this.state.success === \"Game Updated\"){\n            this.setState({\n                success: null\n            })\n            return <Redirect to=\"/games\" />\n        }\n        if(this.props.auth.uid){\n        return(\n            <div className=\"container\">\n                <form id=\"form\" onSubmit={ this.handleSubmit }>\n                <div className=\"red-text center\">\n                    {this.state.error ? <p>{this.state.error}</p> : null}\n                </div>  \n                <div className=\"black-text center\">\n                    {this.state.success ? <p>{this.state.success}</p> : null}\n                </div>  \n                    <label>Winner</label>\n                    <input\n                        type=\"text\"\n                        autoComplete=\"off\" \n                        input={players} \n                        name=\"winner1\"\n                        placeholder= \"Winner\"\n                        onChange={ this.handleChange } \n                        value={this.state.winner1} />\n                        {this.renderSuggestions(\"winner1\")}\n                    <input\n                        type=\"text\"\n                        autoComplete=\"off\" \n                        input={players} \n                        name=\"winner2\"\n                        placeholder=\"Winner\"\n                        onChange={ this.handleChange } \n                        value={this.state.winner2} />\n                        {this.renderSuggestions(\"winner2\")}\n                    <input\n                        type=\"text\"\n                        autoComplete=\"off\" \n                        input={players} \n                        name=\"loser1\"\n                        placeholder=\"Loser\"\n                        onChange={ this.handleChange } \n                        value={this.state.loser1} />\n                        {this.renderSuggestions(\"loser1\")}\n                    <input\n                        type=\"text\"\n                        autoComplete=\"off\" \n                        input={players} \n                        name=\"loser2\"\n                        placeholder=\"Loser\"\n                        onChange={ this.handleChange } \n                        value={this.state.loser2} />\n                        {this.renderSuggestions(\"loser2\")}\n                    <label >Score</label>\n                    <input \n                        type=\"text\" \n                        name=\"score\" \n                        autoComplete=\"off\" \n                        placeholder=\"Loser's Score\" \n                        value={this.state.score}\n                        onChange={ this.handleChange} />\n                    <button type=\"submit\"> Add </button>\n                </form>\n            </div>\n        );}\n        else {\n            return <Redirect to=\"/games\" />\n        }\n    }\n}\n\nconst mapStatetoProps = (state) => {\n    return{\n        auth: state.firebase.auth,\n        players: state.firestore.data.players,\n        games: state.firestore.data.games\n    }\n} \nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        editGame: (id, game) => dispatch(editGame(id, game))\n    }\n}\n\nexport default compose(\n    connect(mapStatetoProps, mapDispatchtoProps),\n    firestoreConnect([\n        { collection: 'players' },\n        { collection: 'games' }\n    ])\n) (EditGame);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { createGame } from \"../store/actions/gameActions\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from 'react-redux-firebase';\nimport \"../AutocompleteText.css\"\n\nclass RankSettings extends Component {\n    state = {\n        gamesPlayed: 15\n    }\n\n    handleChange = (e) => {\n        const val = e.target;\n        console.log(val)\n        if(e != null && val != null){\n            console.log(val)\n            this.setState(() => ({\n                gamesPlayed: val.value\n            }));\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        // Need to link to rankings\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n                <form id=\"form\" onSubmit={ this.handleSubmit }>\n                <div className=\"red-text center\">\n                    {this.state.error ? <p>{this.state.error}</p> : null}\n                </div>  \n                <div className=\"black-text center\">\n                    {this.state.success ? <p>{this.state.success}</p> : null}\n                </div>  \n                <label >Minimum Number of Games Needed for Ranking</label>\n                    <input\n                        type=\"text\"\n                        autoComplete=\"off\" \n                        name=\"Minimum Games Needed\"\n                        placeholder=\"Minimum Games Needed\"\n                        onChange={ this.handleChange } \n                        value={this.state.gamesPlayed} />\n                    <button type=\"submit\"> Add </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStatetoProps = (state) => {\n    return{\n        players: state.firestore.data.players\n    }\n} \nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        createGame: (game) => dispatch(createGame(game))\n    }\n}\n\nexport default compose(\n    connect(mapStatetoProps, mapDispatchtoProps),\n    firestoreConnect([\n        { collection: 'players' }\n    ])\n)(RankSettings);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { deletePlayer } from \"../store/actions/playerActions\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from 'react-redux-firebase';\nimport \"../AutocompleteText.css\"\n\nclass DeletePlayer extends Component {\n\n    onClick = (e) => {\n        if(this.props.players != null){\n            var playerKeys = Object.keys(this.props.players)\n            playerKeys.forEach(player => {\n                this.props.deletePlayer(player)\n            });\n            window.alert(\"Player List Deleted\")\n        } else {\n            window.alert(\"No Players to Delete\")\n        }\n\n    }\n\n\n    render(){\n        return(\n            <div className=\"container z-depth-1\">\n                <h5 className=\"red-text center-align\">Only press this button if you want to delete the entire player list</h5>\n                <div className=\"center-align\">\n                    <button className=\"waves-effect waves-light red btn\" onClick={ this.onClick }> Delete all Players </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStatetoProps = (state) => {\n    return{\n        players: state.firestore.data.players\n    }\n} \nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        deletePlayer: (player) => dispatch(deletePlayer(player))\n    }\n}\n\nexport default compose(\n    connect(mapStatetoProps, mapDispatchtoProps),\n    firestoreConnect([\n        { collection: 'players' }\n    ])\n)(DeletePlayer);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { deleteGame } from \"../store/actions/gameActions\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from 'react-redux-firebase';\nimport \"../AutocompleteText.css\"\n\nclass DeleteDatabase extends Component {\n\n    onClick = (e) => {\n        if(this.props.games != null){\n            var gameKeys = Object.keys(this.props.games)\n            gameKeys.forEach(game => {\n                this.props.deleteGame(game)\n            });\n            window.alert(\"Database Deleted\")\n        } else {\n            window.alert(\"No Database to Delete\")\n        }\n    }\n\n\n    render(){\n        return(\n            <div className=\"container z-depth-1\">\n                <h5 className=\"red-text center-align\">Only press this button if you want to delete the entire games database</h5>\n                <div className=\"center-align\">\n                    <button className=\"waves-effect waves-light red btn\" onClick={ this.onClick }> Delete Database </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStatetoProps = (state) => {\n    return{\n        games: state.firestore.data.games\n    }\n} \nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        deleteGame: (game) => dispatch(deleteGame(game))\n    }\n}\n\nexport default compose(\n    connect(mapStatetoProps, mapDispatchtoProps),\n    firestoreConnect([\n        { collection: 'games' }\n    ])\n)(DeleteDatabase);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport DeleteDatabase from './DeleteDatabase';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport \"../AutocompleteText.css\"\n\nclass EditGamesDatabase extends Component {\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"card\">\n                    <h5 className=\"center\">Games</h5>\n                    <DeleteDatabase />\n                </div> \n            </div>\n\n            \n        );\n    }\n}\n\nconst mapStatetoProps = (state) => {\n    return{\n        games: state.firestore.data.games\n    }\n} \n\nexport default compose(\n    connect(mapStatetoProps, null),\n    firestoreConnect([\n        { collection: 'games' }\n    ])\n)(EditGamesDatabase);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { createGame } from \"../store/actions/gameActions\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from 'react-redux-firebase';\nimport \"../AutocompleteText.css\"\nimport RankSettings from './RankSettings';\nimport DeletePlayers from './DeletePlayers';\nimport EditGamesDatabase from './EditGamesDatabase';\nimport DeleteDatabase from './DeleteDatabase';\n\nclass Settings extends Component {\n    state = {\n        authorized: false\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            newUser:{\n                ...this.state.newUser,\n                [e.target.id]: e.target.value\n            }\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if(this.state.newUser.email == this.props.auth.email){\n            this.setState({\n                authorized: true\n            })\n        }\n        \n    }\n\n    render(){\n        if(this.state.authorized){\n            return(\n                <div>\n                    {/* <RankSettings/> */}\n                    <br></br>\n                    <br></br>\n                    <div className=\"row\">\n                        <div className=\"col s6\">\n                        {/* <EditGamesDatabase /> */}\n                        <DeleteDatabase />\n                        </div>\n                        <div className=\"col s6\">\n                        <DeletePlayers />\n                        </div>\n                    </div> \n                </div>\n            )\n        } else {\n        return(\n            <div>\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                <div className=\"input-field\">\n                    <div className=\"center\">\n                        <h5>Re-enter you email to access this page</h5>\n                    </div>\n                    <div className=\"container\">\n                        <label htmlFor=\"email\">Re-enter your Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                        <button type=\"submit\"> Confirm </button>\n                    </div>\n                </div>  \n                </form>\n            </div>\n        );\n            }\n    }\n}\n\nconst mapStatetoProps = (state) => {\n    return{\n        players: state.firestore.data.players,\n        auth: state.firebase.auth\n    }\n} \nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        createGame: (game) => dispatch(createGame(game))\n    }\n}\n\nexport default compose(\n    connect(mapStatetoProps, mapDispatchtoProps),\n    firestoreConnect([\n        { collection: 'players' }\n    ])\n)(Settings);","import React, { Component } from 'react';\nimport Home from './components/Home';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Players from './components/Players';\nimport Games from './components/Games';\nimport Navbar from './components/Navbar';\nimport Player from './components/Player';\nimport AddPlayer from './components/AddPlayer';\nimport AddAccount from \"./components/AddAccount\";\nimport Signin from \"./components/Signin\";\nimport EditGame from './components/EditGame';\nimport Settings from './components/Settings';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <Navbar/>\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route exact path=\"/players\" component={Players}/>\n          <Route exact path=\"/games\" component={Games} />\n          <Route path=\"/players/:player_id\" component={Player} />\n          <Route path=\"/add\" component={AddPlayer} />\n          <Route path=\"/add_account\" component={AddAccount} />\n          <Route path=\"/signin\" component={Signin} />\n          <Route path=\"/games/:game_id\" component={EditGame} />\n          <Route path=\"/settings\" component={Settings} />\n        </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    players: []\n}\n\nconst playerReducer = (state = initState, action) => {\n    switch(action.type){\n        case \"CREATE_PLAYER\":\n            return {\n                ...state,\n                players: [...state.players, action.player]\n            }\n        case \"ADD_WEIGHT\":\n            return {\n                ...state,\n                players: [...state.players, action.playerName, action.weight]\n            }\n        case \"ADD_RANK\":\n            return {\n                ...state,\n                players: [...state.players, action.playerName, action.rank]\n            }\n        case \"DELETE_PLAYERS\":\n            return {\n                ... state,\n                players: []\n            }\n        default:\n            return state;\n    }\n}\nexport default playerReducer;","const initState = {\n    games: []\n}\n\nconst gameReducer = (state = initState, action) => {\n    switch(action.type){\n        case \"CREATE_GAME\":\n            return{\n                ...state,\n                games: [...state.games, action.game]\n            }\n        case \"UPDATE_GAME\":\n            return{\n                ...state,\n                games: state.games.map((game, id) => {\n                    if (id === action.id) {\n                      return Object.assign({}, game, {\n                        completed: false\n                      })\n                    }\n                    return state.games\n                })\n            }\n        case \"DELETE_GAME\":\n            return{\n                ...state,\n                games: []\n            }\n        default:\n            return state;\n    }\n}\n\nexport default gameReducer;","const initState = {\n    authError: null,\n    accountAdded: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            return {\n                ...state,\n                authError: 'Login Failed'\n            }\n        case 'LOGIN_SUCCESS':\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            return{\n                state\n            }\n        case 'SIGNUP_SUCCESS':\n            return{\n                ...state,\n                authError: null,\n                accountAdded: true\n            }\n        case 'SIGNUP_ERROR':\n            return{\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","import playerReducer from \"./playerReducer\";\nimport gameReducer from \"./gameReducer\";\nimport { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n    player: playerReducer,\n    game: gameReducer,\n    auth: authReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer;","\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\"\n\n  // Initialize Firebase\n  var config = {\n    apiKey: \"AIzaSyAmykopjj718snpBmdaMfFvYMe4IoaggK0\",\n    authDomain: \"uwaterlooeuchre.firebaseapp.com\",\n    databaseURL: \"https://uwaterlooeuchre.firebaseio.com\",\n    projectId: \"uwaterlooeuchre\",\n    storageBucket: \"uwaterlooeuchre.appspot.com\",\n    messagingSenderId: \"756338843354\"\n  };\n  firebase.initializeApp(config);\n\n  firebase.firestore().settings({ timestampsInSnapshots: true });\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer.js\";\nimport { Provider } from \"react-redux\";\nimport fbConfig from \"./config/fbConfig\";\nimport thunk from \"redux-thunk\"\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {attachAuthIsReady: true})\n    ));\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n\n"],"sourceRoot":""}